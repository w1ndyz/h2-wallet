[{"/Users/windy/wallet/h2-wallet/src/App.js":"1","/Users/windy/wallet/h2-wallet/src/index.js":"2","/Users/windy/wallet/h2-wallet/src/view/wallet/wallet.js":"3","/Users/windy/wallet/h2-wallet/src/reportWebVitals.js":"4","/Users/windy/wallet/h2-wallet/src/view/home/home.js":"5","/Users/windy/wallet/h2-wallet/src/view/home/eth_home.js":"6","/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_private.js":"7","/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_keystore.js":"8","/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_mnemonic.js":"9","/Users/windy/wallet/h2-wallet/src/view/login/eth/login.js":"10","/Users/windy/wallet/h2-wallet/src/view/login/tron/login.js":"11","/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_mnemonic.js":"12","/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_private.js":"13","/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_keystore.js":"14","/Users/windy/wallet/h2-wallet/src/service/eth_service.js":"15","/Users/windy/wallet/h2-wallet/src/view/home/tron_home.js":"16","/Users/windy/wallet/h2-wallet/src/config.js":"17"},{"size":773,"mtime":1611127329086,"results":"18","hashOfConfig":"19"},{"size":449,"mtime":1610052604905,"results":"20","hashOfConfig":"19"},{"size":8499,"mtime":1611238529449,"results":"21","hashOfConfig":"19"},{"size":362,"mtime":1610028397073,"results":"22","hashOfConfig":"19"},{"size":894,"mtime":1611127262664,"results":"23","hashOfConfig":"19"},{"size":842,"mtime":1611126323564,"results":"24","hashOfConfig":"19"},{"size":1731,"mtime":1611207219457,"results":"25","hashOfConfig":"19"},{"size":1820,"mtime":1611127499547,"results":"26","hashOfConfig":"19"},{"size":1653,"mtime":1611207860620,"results":"27","hashOfConfig":"19"},{"size":1103,"mtime":1611126614503,"results":"28","hashOfConfig":"19"},{"size":1096,"mtime":1611126703981,"results":"29","hashOfConfig":"19"},{"size":1653,"mtime":1611127394371,"results":"30","hashOfConfig":"19"},{"size":1727,"mtime":1611207193110,"results":"31","hashOfConfig":"19"},{"size":1820,"mtime":1611127389399,"results":"32","hashOfConfig":"19"},{"size":2935,"mtime":1611211231410,"results":"33","hashOfConfig":"19"},{"size":844,"mtime":1611126729166,"results":"34","hashOfConfig":"19"},{"size":536,"mtime":1611238602548,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ahiif9",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/windy/wallet/h2-wallet/src/App.js",[],["75","76"],"/Users/windy/wallet/h2-wallet/src/index.js",[],"/Users/windy/wallet/h2-wallet/src/view/wallet/wallet.js",["77","78","79","80"],"/Users/windy/wallet/h2-wallet/src/reportWebVitals.js",[],"/Users/windy/wallet/h2-wallet/src/view/home/home.js",[],"/Users/windy/wallet/h2-wallet/src/view/home/eth_home.js",[],"/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_private.js",[],"/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_keystore.js",["81"],"import { Button, Form, Input, message } from 'antd'\nimport PubSub from 'pubsub-js'\nimport React, {Component} from 'react'\n\nimport { LockOutlined, KeyOutlined } from '@ant-design/icons'\n\nlet service = require('../../../service/eth_service')\n\nconst { TextArea } = Input;\n\nexport default class KeyStoreLogin extends Component {\n\n  state = {\n      keyStore: \"\",\n      pwd: \"\",\n      loading: false\n  }\n\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  // 处理导入\n  handleKeyImport = () => {\n      let {keyStore, pwd} = this.state\n      if (keyStore==\"\"){\n          return\n      }\n      console.log(service.checkJsonWallet(keyStore))\n      this.setState({loading:true})\n      service.newWalletFromJson(keyStore, pwd).then(wallets => {\n          PubSub.publish(\"onLoginSucc\", wallets)\n          this.setState({loading:false})\n      }).catch(e => {\n          console.log(e)\n          message.error(\"导入出错\" + e)\n          this.setState({loading:false})\n      })\n  }\n\n  onFileChooseClick = ()=>{}\n\n  render() {\n    return (\n      <Form size=\"large\">\n        <Form.Item>\n          <TextArea \n            rows={4} \n            placeholder=\"keystore为json格式\" \n            name=\"keyStore\"\n            value={this.state.keyStore}\n            onChange={this.handleChange}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Input \n            prefix={<LockOutlined />}\n            placeholder=\"password\"\n            type=\"password\"\n            name=\"pwd\"\n            value={this.state.pwd}\n            onChange={this.handleChange}\n          />\n        </Form.Item>\n        <Button\n          icon={<KeyOutlined/>}\n          type=\"primary\" size='large'\n          onClick={this.handleKeyImport}\n        >\n          KeyStore导入\n        </Button>\n      </Form>\n    )\n}\n}","/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_mnemonic.js",["82"],"import { Button, Form, Input } from 'antd'\nimport PubSub from 'pubsub-js'\nimport React, {Component} from 'react'\n\nimport { UserOutlined, BookOutlined } from '@ant-design/icons';\n\nconst { TextArea } = Input;\n\nlet service = require('../../../service/eth_service')\n\nexport default class MmicLogin extends Component {\n\n  state = {\n      privateKey: \"\",\n      mmic: \"\",\n      pwd: \"\",\n      path: \"m/44'/60'/0'/0/0\",\n  }\n  // 处理输入文本绑定\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  // 生成助记词\n  handleGenMicc = () => {\n      let mmic = service.genMmic()\n      this.setState({mmic})\n  }\n\n  // 助记词导入\n  onMMICClick = () => {\n      let {mmic, path} = this.state\n      let wallets = service.newWalletFromMmic(mmic, path)\n      PubSub.publish(\"onLoginSucc\", wallets)\n  }\n\n  render() {\n    return (\n      <Form size=\"large\">\n        <Form.Item>\n          <TextArea \n            rows={4} \n            placeholder=\"12 words\" \n            name=\"mmic\"\n            value={this.state.mmic}\n            onChange={this.handleChange}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Input \n            prefix={<UserOutlined />}\n            placeholder=\"private key\"\n            type=\"path\"\n            value={this.state.path}\n            readOnly\n          />\n        </Form.Item>\n        <Form.Item>\n          <a onClick={this.handleGenMicc}>随机生成</a>\n        </Form.Item>\n        <Button\n          icon={<BookOutlined/>}\n          type=\"primary\" size='large'\n          onClick={this.onMMICClick}\n        >\n          助记词导入\n        </Button>\n      </Form>\n    )\n  }\n}\n","/Users/windy/wallet/h2-wallet/src/view/login/eth/login.js",[],"/Users/windy/wallet/h2-wallet/src/view/login/tron/login.js",[],"/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_mnemonic.js",["83"],"/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_private.js",["84"],"import { Button, Form, Input, message } from 'antd'\nimport React, {Component} from 'react'\nimport PubSub from 'pubsub-js'\n\nimport { LockOutlined, DownloadOutlined } from '@ant-design/icons';\n\nlet service = require('../../../service/eth_service')\n\nexport default class PrivateLogin extends Component {\n  \n  state = {\n    privateKey: \"\",\n  }\n\n  handleCreateClick = () => {\n      let privateKey = service.newRandomKey()\n      this.setState({privateKey})\n  }\n\n  handleChange = (e) => {\n      this.setState({[e.target.name]: e.target.value})\n  }\n\n  onPrivateLoginClick = () => {\n      let key = this.state.privateKey\n      let err = service.checkPrivate(key)\n      if (err !== \"\") {\n        message.error(err)\n        return;\n      }\n      if (key.substring(0, 2).toLowerCase() !== '0x') {\n        key = '0x' + key;\n      }\n      console.log(\"开始创建钱包\", key)\n      let wallets = service.newWalletFromPrivateKey(key)\n      if (wallets) {\n        PubSub.publish(\"onLoginSucc\", wallets)\n      } else {\n        message.error(\"导入出错\")\n      }\n  }\n\n  render() {\n    return (\n      <Form size=\"large\">\n        <Form.Item>\n          <Input \n            prefix={<LockOutlined />}\n            placeholder=\"private key\"\n            value={this.state.privateKey}\n            name=\"privateKey\"\n            onChange={this.handleChange}\n          />\n        </Form.Item>\n        <Form.Item>\n          <a href='#' onClick={this.handleCreateClick}>随机生成</a>\n        </Form.Item>\n        <br/>\n        <br/>\n        <br/>\n        <Button\n          icon={<DownloadOutlined />}\n          type=\"primary\" size='large'\n          onClick={this.onPrivateLoginClick}>\n          私钥导入\n        </Button>\n      </Form>\n    )\n  }\n}","/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_keystore.js",["85"],"/Users/windy/wallet/h2-wallet/src/service/eth_service.js",["86","87","88","89","90","91","92","93","94","95"],"import {BlockTag, Provider, TransactionRequest, TransactionResponse} from \"ethers/providers\";\nimport {Arrayish, BigNumber, ProgressCallback} from \"ethers/utils\";\n\nlet ethers = require('ethers')\n// import ethers from 'ethers'\n\n// 默认路径\nconst PATH_PREFIX = \"m/44'/60'/0'/0/\"\n\n// 私钥校验\nfunction checkPrivate(key) {\n    if (key === '') {\n        return \"不能为空\"\n    }\n    if (key.length != 66 && key.length != 64) {\n        return false, \"秘钥长度必须为66或者64\"\n    }\n    if (!key.match(/^(0x)?([0-9A-fa-f]{64})+$/)) {\n        return \"秘钥为16进制表示[0-9A-fa-f]\"\n    }\n    return \"\"\n}\n\n// 地址校验\nfunction checkAddress(address) {\n    try {\n        let realAddress =ethers.utils.getAddress(address)\n        console.log(\"realaddress\",realAddress)\n        return realAddress\n    }catch (e) {\n        return \"\"\n    }\n\n}\n\n// 随机私钥\nfunction newRandomKey() {\n    let randomByte = ethers.utils.randomBytes(32)\n    let randomNumber = ethers.utils.bigNumberify(randomByte);\n    return randomNumber.toHexString()\n}\n\n// 通过私钥创建钱包\nfunction newWalletFromPrivateKey(privateKey) {\n    let wallets = []\n    let wallet = new ethers.Wallet(privateKey)\n    wallets.push(wallet)\n    return wallets\n}\n\n// 通过助记词创建钱包\nfunction newWalletFromMmic(mmic, path) {\n    console.log('1111', mmic, path)\n    let wallets = []\n    for (let i = 0; i < 10; i++) {\n        path = PATH_PREFIX + i\n        let wallet = ethers.Wallet.fromMnemonic(mmic, path)\n        wallets.push(wallet)\n        console.log(i, wallets)\n    }\n    return wallets\n}\n\n// 随机创建钱包\nfunction newRandomWallet() {\n    let wallets = []\n    let wallet = ethers.Wallet.createRandom()\n    wallets.push(wallet)\n    return wallets\n}\n\n// 校验地址\nfunction checkJsonWallet(data) {\n    return ethers.utils.getJsonWalletAddress(data)\n}\n\n// 从keystore导入钱包，需要密码\nfunction newWalletFromJson(json, pwd) {\n\n    return new Promise(async (resolve, reject) => {\n        try {\n            let wallets = []\n            let wallet = await ethers.Wallet.fromEncryptedJson(json, pwd, false)\n            wallets.push(wallet)\n            resolve(wallets)\n        } catch (e) {\n            reject(e)\n        }\n    })\n}\n\n// 生成助记词\nfunction genMmic() {\n    let words = ethers.utils.HDNode.entropyToMnemonic(ethers.utils.randomBytes(16));\n    return words\n}\n\n// 连接provider\nfunction connectWallet(wallet, providerurl) {\n    let provider = new ethers.providers.JsonRpcProvider(providerurl);\n    return wallet.connect(provider);\n}\n\n// 发送交易\nfunction sendTransaction(wallet,to,value) {\n    return wallet.sendTransaction({\n        to: to,\n        value: value,\n    })\n}\n\nexport {\n    checkPrivate,\n    checkAddress,\n    newRandomKey,\n    newWalletFromPrivateKey,\n    newWalletFromMmic,\n    newRandomWallet,\n    genMmic,\n    newWalletFromJson,\n    checkJsonWallet,\n    connectWallet,\n    sendTransaction,\n}","/Users/windy/wallet/h2-wallet/src/view/home/tron_home.js",[],"/Users/windy/wallet/h2-wallet/src/config.js",["96","97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":49,"column":52,"nodeType":"105","messageId":"106","endLine":49,"endColumn":54},{"ruleId":"103","severity":1,"message":"104","line":54,"column":35,"nodeType":"105","messageId":"106","endLine":54,"endColumn":37},{"ruleId":"103","severity":1,"message":"104","line":91,"column":15,"nodeType":"105","messageId":"106","endLine":91,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":154,"column":23,"nodeType":"105","messageId":"106","endLine":154,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":26,"column":19,"nodeType":"105","messageId":"106","endLine":26,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":59,"column":11,"nodeType":"109","endLine":59,"endColumn":43},{"ruleId":"107","severity":1,"message":"108","line":59,"column":11,"nodeType":"109","endLine":59,"endColumn":43},{"ruleId":"107","severity":1,"message":"110","line":56,"column":11,"nodeType":"109","endLine":56,"endColumn":56},{"ruleId":"103","severity":1,"message":"104","line":26,"column":19,"nodeType":"105","messageId":"106","endLine":26,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":1,"column":9,"nodeType":"113","messageId":"114","endLine":1,"endColumn":17},{"ruleId":"111","severity":1,"message":"115","line":1,"column":19,"nodeType":"113","messageId":"114","endLine":1,"endColumn":27},{"ruleId":"111","severity":1,"message":"116","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":47},{"ruleId":"111","severity":1,"message":"117","line":1,"column":49,"nodeType":"113","messageId":"114","endLine":1,"endColumn":68},{"ruleId":"111","severity":1,"message":"118","line":2,"column":9,"nodeType":"113","messageId":"114","endLine":2,"endColumn":17},{"ruleId":"111","severity":1,"message":"119","line":2,"column":19,"nodeType":"113","messageId":"114","endLine":2,"endColumn":28},{"ruleId":"111","severity":1,"message":"120","line":2,"column":30,"nodeType":"113","messageId":"114","endLine":2,"endColumn":46},{"ruleId":"103","severity":1,"message":"121","line":15,"column":20,"nodeType":"105","messageId":"106","endLine":15,"endColumn":22},{"ruleId":"103","severity":1,"message":"121","line":15,"column":40,"nodeType":"105","messageId":"106","endLine":15,"endColumn":42},{"ruleId":"122","severity":1,"message":"123","line":16,"column":21,"nodeType":"124","messageId":"125","endLine":16,"endColumn":22},{"ruleId":"103","severity":1,"message":"104","line":3,"column":31,"nodeType":"105","messageId":"106","endLine":3,"endColumn":33},{"ruleId":"103","severity":1,"message":"104","line":7,"column":38,"nodeType":"105","messageId":"106","endLine":7,"endColumn":40},{"ruleId":"103","severity":1,"message":"104","line":11,"column":38,"nodeType":"105","messageId":"106","endLine":11,"endColumn":40},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'BlockTag' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'TransactionRequest' is defined but never used.","'TransactionResponse' is defined but never used.","'Arrayish' is defined but never used.","'BigNumber' is defined but never used.","'ProgressCallback' is defined but never used.","Expected '!==' and instead saw '!='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]