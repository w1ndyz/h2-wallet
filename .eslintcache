[{"/Users/windy/wallet/h2-wallet/src/App.js":"1","/Users/windy/wallet/h2-wallet/src/index.js":"2","/Users/windy/wallet/h2-wallet/src/view/wallet/wallet.js":"3","/Users/windy/wallet/h2-wallet/src/reportWebVitals.js":"4","/Users/windy/wallet/h2-wallet/src/view/home/home.js":"5","/Users/windy/wallet/h2-wallet/src/view/home/eth_home.js":"6","/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_private.js":"7","/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_keystore.js":"8","/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_mnemonic.js":"9","/Users/windy/wallet/h2-wallet/src/view/login/eth/login.js":"10","/Users/windy/wallet/h2-wallet/src/view/login/tron/login.js":"11","/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_mnemonic.js":"12","/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_private.js":"13","/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_keystore.js":"14","/Users/windy/wallet/h2-wallet/src/service/eth_service.js":"15","/Users/windy/wallet/h2-wallet/src/view/home/tron_home.js":"16","/Users/windy/wallet/h2-wallet/src/config.js":"17","/Users/windy/wallet/h2-wallet/src/service/tron_service.js":"18","/Users/windy/wallet/h2-wallet/src/view/wallet/tron_wallet.js":"19"},{"size":773,"mtime":1611127329086,"results":"20","hashOfConfig":"21"},{"size":449,"mtime":1610052604905,"results":"22","hashOfConfig":"21"},{"size":8458,"mtime":1611286312018,"results":"23","hashOfConfig":"21"},{"size":362,"mtime":1610028397073,"results":"24","hashOfConfig":"21"},{"size":894,"mtime":1611127262664,"results":"25","hashOfConfig":"21"},{"size":842,"mtime":1611126323564,"results":"26","hashOfConfig":"21"},{"size":1731,"mtime":1611207219457,"results":"27","hashOfConfig":"21"},{"size":1820,"mtime":1611127499547,"results":"28","hashOfConfig":"21"},{"size":1653,"mtime":1611207860620,"results":"29","hashOfConfig":"21"},{"size":1103,"mtime":1611126614503,"results":"30","hashOfConfig":"21"},{"size":1096,"mtime":1611126703981,"results":"31","hashOfConfig":"21"},{"size":1653,"mtime":1611127394371,"results":"32","hashOfConfig":"21"},{"size":1760,"mtime":1612100884108,"results":"33","hashOfConfig":"21"},{"size":1821,"mtime":1611286342485,"results":"34","hashOfConfig":"21"},{"size":2899,"mtime":1612257813612,"results":"35","hashOfConfig":"21"},{"size":849,"mtime":1611471392836,"results":"36","hashOfConfig":"21"},{"size":598,"mtime":1612098364607,"results":"37","hashOfConfig":"21"},{"size":4312,"mtime":1612261174360,"results":"38","hashOfConfig":"21"},{"size":8181,"mtime":1612260468699,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ahiif9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/windy/wallet/h2-wallet/src/App.js",[],["84","85"],"/Users/windy/wallet/h2-wallet/src/index.js",[],"/Users/windy/wallet/h2-wallet/src/view/wallet/wallet.js",["86","87","88","89"],"import React, {Component} from 'react'\nimport { \n  Layout, \n  PageHeader, \n  Card, \n  Row, \n  Col, \n  Spin, \n  Form, \n  Input,\n  Button,\n  message\n} from 'antd'\nimport { eth_address } from '../../config'\nimport { MoneyCollectOutlined, IdcardOutlined, SwapOutlined, LockOutlined } from '@ant-design/icons';\n\nlet ethers = require('ethers')\nlet service = require('../../service/eth_service')\nlet fileSaver = require('file-saver');\n\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 48 },\n};\n\nexport default class Wallet extends Component {\n\n  state = {\n      wallets: [],// 支持多账户，默认第0个\n      selectWallet: 0,\n      provider: eth_address, //环境\n      walletInfo: [], // 钱包信息，获取为异步，单独存储下\n      activeWallet: {}, // 当前活跃钱包\n      txto: \"\", // 交易接收地址\n      txvalue: \"\", // 转账交易金额\n      pwd: \"\", // 导出keystore需要密码\n\n      // UI状态表示\n      txPositive: false, //\n      loading: false,\n      exportLoading: false,\n\n  }\n\n  constructor(props) {\n    super(props)\n    this.state.wallets = props.wallets\n    this.state.selectWallet = props.wallets.length == 0 ? -1 : 0\n}\n\n// 更新钱包信息\nupdateActiveWallet() {\n    if (this.state.wallets.length == 0) {\n        return null\n    }\n    let activeWallet = this.getActiveWallet()\n    this.setState({activeWallet})\n    this.loadActiveWalletInfo(activeWallet)\n    return activeWallet\n}\n\n// 获取当前的钱包\ngetActiveWallet() {\n    let wallet = this.state.wallets[this.state.selectWallet]\n    console.log(\"wallet\", wallet)\n    // 激活钱包需要连接provider\n    return service.connectWallet(wallet, this.state.provider)\n}\n\n// 加载钱包信息\nasync loadActiveWalletInfo(wallet) {\n    let address = await wallet.getAddress()\n    let balance = await wallet.getBalance()\n    // 获取交易次数\n    let tx = await wallet.getTransactionCount()\n    console.log(address, balance, tx);\n    this.setState({\n        walletInfo: [address, balance, tx]\n    })\n}\n\n// 发送交易\nonSendClick = () => {\n  let {txto, txvalue, activeWallet} = this.state\n  // balance 为Object类型\n\n  console.log(\"balance\", activeWallet)\n  // 地址校验\n  let address = service.checkAddress(txto)\n  if (address == \"\") {\n    message.error(\"地址不正确\")\n    return \n  }\n  console.log(txvalue, isNaN(txvalue))\n  if (isNaN(txvalue)) {\n    message.error(\"转账金额不合法\")\n    return\n  }\n  // 以太币转换，发送wei单位\n  txvalue = ethers.utils.parseEther(txvalue);\n  console.log(\"txvalue\", txvalue)\n\n  // 设置加载loading，成功或者识别后取消loading\n  this.setState({loading: true})\n\n  service.sendTransaction(activeWallet, txto, txvalue)\n      .then(tx => {\n          console.log(tx)\n          message.success(\"交易成功\")\n          this.updateActiveWallet()\n          this.setState({loading: false, txto: \"\", txvalue: \"\"})\n      })\n      .catch(e => {\n          this.setState({loading: false})\n          console.log(e);\n          message.error(e);\n      })\n  }\n\n  // 查看私钥\n  onExportPrivate = () => {\n    message.info(this.getActiveWallet().privateKey)\n  }\n  // 导出keystore\n  onExportClick = () => {\n      let pwd = this.state.pwd;\n      if (pwd.length < 8) {\n        message.error(\"密码长度不能小于8\")\n        return\n      }\n      this.setState({exportLoading: true})\n      // 通过密码加密\n      this.getActiveWallet().encrypt(pwd, false).then(json => {\n          let blob = new Blob([json], {type: \"text/plain;charset=utf-8\"})\n          fileSaver.saveAs(blob, \"keystore.json\")\n          this.setState({exportLoading: false})\n      });\n  }\n\n  // 页面加载完毕，更新钱包信息\n  componentDidMount() {\n      this.updateActiveWallet()\n  }\n\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  render() {\n    // 金额显示需要手工转换\n    let wallet = this.state.walletInfo\n    console.log(\"wallet>:\", wallet);\n    if (wallet.length == 0) {\n        return <Spin size=\"large\" tip=\"loading...\"/>\n    }\n    let balance = wallet[1]\n    let balanceShow = ethers.utils.formatEther(balance) + \"(\" + balance.toString() + \")\"\n    return (\n      <Layout style={{ background: '#fff' }}>\n        <PageHeader \n          title=\"以太坊氢钱包\"\n          avatar={{ src: 'images/ethereum.png', width: \"50px\", height:\"50px\" }}\n        />\n        <div className=\"site-card-wrapper\">\n          <Row gutter={[16, 16]} type=\"flex\" justify=\"center\">\n            <Col span={10}>\n              <Card title=\"钱包账户\" bordered={false}>\n                <Form size=\"large\">\n                  <Form.Item>\n                    <Input \n                      prefix={<IdcardOutlined />}\n                      value={wallet[0]}\n                      addonBefore=\"地址\"\n                      readOnly\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Input \n                      prefix={<MoneyCollectOutlined />}\n                      value={balanceShow}\n                      addonBefore=\"余额\"\n                      readOnly\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Input \n                      prefix={<SwapOutlined />}\n                      value={wallet[2]}\n                      addonBefore=\"交易\"\n                      readOnly\n                    />\n                  </Form.Item>\n                </Form>\n              </Card>\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]} type=\"flex\" justify=\"center\">\n            <Col span={10}>\n              <Card title=\"钱包账户\" bordered={false}>\n                <Form size=\"large\">\n                  <Form.Item>\n                    <Input \n                      prefix={<IdcardOutlined />}\n                      addonBefore=\"地址\"\n                      placeholder=\"对方地址\"\n                      type='text'\n                      name='txto'\n                      value={this.state.txto}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Input \n                      prefix={<MoneyCollectOutlined />}\n                      addonBefore=\"金额\"\n                      placeholder=\"eth\"\n                      type='text'\n                      name='txvalue'\n                      value={this.state.txvalue}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Item>\n                  <Form.Item {...tailLayout}>\n                    <Col style={{ width: 100 }}>\n                      <Button\n                        loading={this.state.loading}\n                        onClick={this.onSendClick}\n                        type=\"primary\" size='large'\n                        style={{ width: 100 + '%' }}\n                      >\n                        确认\n                      </Button>\n                    </Col>\n\n                  </Form.Item>\n                </Form>\n              </Card>\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]} type=\"flex\" justify=\"center\">\n            <Col span={10}>\n              <Card title=\"设置\" bordered={false}>\n              <Form size=\"large\">\n                  <Form.Item>\n                    <Input \n                      prefix={<LockOutlined />}\n                      addonBefore=\"密码\"\n                      placeholder=\"密码\"\n                      type='password'\n                      name='pwd'\n                      value={this.state.pwd}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Item>\n                  <Form.Item {...tailLayout}>\n                    <Button\n                      onClick={this.onExportPrivate}\n                      type=\"primary\" size='large'\n                    >\n                      查看私钥\n                    </Button>\n                    <Button\n                      loading={this.state.exportLoading}\n                      onClick={this.onExportClick}\n                      type=\"primary\" size='large'\n                      style={{ marginLeft: 15 + 'px' }}\n                    >\n                      KeyStore导出\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Card>\n            </Col>\n          </Row>\n            \n          \n        </div>\n      </Layout>\n    )\n  }\n}","/Users/windy/wallet/h2-wallet/src/reportWebVitals.js",[],"/Users/windy/wallet/h2-wallet/src/view/home/home.js",[],"/Users/windy/wallet/h2-wallet/src/view/home/eth_home.js",[],"/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_private.js",[],"/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_keystore.js",["90"],"import { Button, Form, Input, message } from 'antd'\nimport PubSub from 'pubsub-js'\nimport React, {Component} from 'react'\n\nimport { LockOutlined, KeyOutlined } from '@ant-design/icons'\n\nlet service = require('../../../service/eth_service')\n\nconst { TextArea } = Input;\n\nexport default class KeyStoreLogin extends Component {\n\n  state = {\n      keyStore: \"\",\n      pwd: \"\",\n      loading: false\n  }\n\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  // 处理导入\n  handleKeyImport = () => {\n      let {keyStore, pwd} = this.state\n      if (keyStore==\"\"){\n          return\n      }\n      console.log(service.checkJsonWallet(keyStore))\n      this.setState({loading:true})\n      service.newWalletFromJson(keyStore, pwd).then(wallets => {\n          PubSub.publish(\"onLoginSucc\", wallets)\n          this.setState({loading:false})\n      }).catch(e => {\n          console.log(e)\n          message.error(\"导入出错\" + e)\n          this.setState({loading:false})\n      })\n  }\n\n  onFileChooseClick = ()=>{}\n\n  render() {\n    return (\n      <Form size=\"large\">\n        <Form.Item>\n          <TextArea \n            rows={4} \n            placeholder=\"keystore为json格式\" \n            name=\"keyStore\"\n            value={this.state.keyStore}\n            onChange={this.handleChange}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Input \n            prefix={<LockOutlined />}\n            placeholder=\"password\"\n            type=\"password\"\n            name=\"pwd\"\n            value={this.state.pwd}\n            onChange={this.handleChange}\n          />\n        </Form.Item>\n        <Button\n          icon={<KeyOutlined/>}\n          type=\"primary\" size='large'\n          onClick={this.handleKeyImport}\n        >\n          KeyStore导入\n        </Button>\n      </Form>\n    )\n}\n}","/Users/windy/wallet/h2-wallet/src/view/login/eth/tab_mnemonic.js",["91"],"import { Button, Form, Input } from 'antd'\nimport PubSub from 'pubsub-js'\nimport React, {Component} from 'react'\n\nimport { UserOutlined, BookOutlined } from '@ant-design/icons';\n\nconst { TextArea } = Input;\n\nlet service = require('../../../service/eth_service')\n\nexport default class MmicLogin extends Component {\n\n  state = {\n      privateKey: \"\",\n      mmic: \"\",\n      pwd: \"\",\n      path: \"m/44'/60'/0'/0/0\",\n  }\n  // 处理输入文本绑定\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  // 生成助记词\n  handleGenMicc = () => {\n      let mmic = service.genMmic()\n      this.setState({mmic})\n  }\n\n  // 助记词导入\n  onMMICClick = () => {\n      let {mmic, path} = this.state\n      let wallets = service.newWalletFromMmic(mmic, path)\n      PubSub.publish(\"onLoginSucc\", wallets)\n  }\n\n  render() {\n    return (\n      <Form size=\"large\">\n        <Form.Item>\n          <TextArea \n            rows={4} \n            placeholder=\"12 words\" \n            name=\"mmic\"\n            value={this.state.mmic}\n            onChange={this.handleChange}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Input \n            prefix={<UserOutlined />}\n            placeholder=\"private key\"\n            type=\"path\"\n            value={this.state.path}\n            readOnly\n          />\n        </Form.Item>\n        <Form.Item>\n          <a onClick={this.handleGenMicc}>随机生成</a>\n        </Form.Item>\n        <Button\n          icon={<BookOutlined/>}\n          type=\"primary\" size='large'\n          onClick={this.onMMICClick}\n        >\n          助记词导入\n        </Button>\n      </Form>\n    )\n  }\n}\n","/Users/windy/wallet/h2-wallet/src/view/login/eth/login.js",[],"/Users/windy/wallet/h2-wallet/src/view/login/tron/login.js",[],"/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_mnemonic.js",["92"],"/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_private.js",[],"/Users/windy/wallet/h2-wallet/src/view/login/tron/tab_keystore.js",["93"],"import { Button, Form, Input, message } from 'antd'\nimport PubSub from 'pubsub-js'\nimport React, {Component} from 'react'\n\nimport { LockOutlined, KeyOutlined } from '@ant-design/icons'\n\nlet service = require('../../../service/tron_service')\n\nconst { TextArea } = Input;\n\nexport default class KeyStoreLogin extends Component {\n\n  state = {\n      keyStore: \"\",\n      pwd: \"\",\n      loading: false\n  }\n\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  // 处理导入\n  handleKeyImport = () => {\n      let {keyStore, pwd} = this.state\n      if (keyStore==\"\"){\n          return\n      }\n      console.log(service.checkJsonWallet(keyStore))\n      this.setState({loading:true})\n      service.newWalletFromJson(keyStore, pwd).then(wallets => {\n          PubSub.publish(\"onLoginSucc\", wallets)\n          this.setState({loading:false})\n      }).catch(e => {\n          console.log(e)\n          message.error(\"导入出错\" + e)\n          this.setState({loading:false})\n      })\n  }\n\n  onFileChooseClick = ()=>{}\n\n  render() {\n    return (\n      <Form size=\"large\">\n        <Form.Item>\n          <TextArea \n            rows={4} \n            placeholder=\"keystore为json格式\" \n            name=\"keyStore\"\n            value={this.state.keyStore}\n            onChange={this.handleChange}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Input \n            prefix={<LockOutlined />}\n            placeholder=\"password\"\n            type=\"password\"\n            name=\"pwd\"\n            value={this.state.pwd}\n            onChange={this.handleChange}\n          />\n        </Form.Item>\n        <Button\n          icon={<KeyOutlined/>}\n          type=\"primary\" size='large'\n          onClick={this.handleKeyImport}\n        >\n          KeyStore导入\n        </Button>\n      </Form>\n    )\n}\n}","/Users/windy/wallet/h2-wallet/src/service/eth_service.js",["94","95","96","97","98","99","100","101","102","103"],"/Users/windy/wallet/h2-wallet/src/view/home/tron_home.js",[],"/Users/windy/wallet/h2-wallet/src/config.js",["104","105","106"],"\nlet eth_address, tron_address\nif (process.env.REACT_APP_ENV == 'development') {\n  console.log(\"这是本地环境\")\n  eth_address = 'http://127.0.0.1:8545'\n  tron_address = 'https://api.shasta.trongrid.io'\n  // tron_address = 'http://127.0.0.1:9090'\n} else if (process.env.REACT_APP_ENV == 'test') {\n  console.log(\"这是测试环境\")\n  eth_address = 'https://ropsten.infura.io/v3/2adf26fc0dc64d2481e3dc8e4eea6df5'\n  tron_address = 'https://api.shasta.trongrid.io'\n} else if (process.env.REACT_APP_ENV == 'production') {\n  console.log(\"这是生产环境\")\n}\n\nexport { eth_address, tron_address }","/Users/windy/wallet/h2-wallet/src/service/tron_service.js",["107","108","109","110"],"/Users/windy/wallet/h2-wallet/src/view/wallet/tron_wallet.js",["111","112","113","114","115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":47,"column":52,"nodeType":"124","messageId":"125","endLine":47,"endColumn":54},{"ruleId":"122","severity":1,"message":"123","line":52,"column":35,"nodeType":"124","messageId":"125","endLine":52,"endColumn":37},{"ruleId":"122","severity":1,"message":"123","line":89,"column":15,"nodeType":"124","messageId":"125","endLine":89,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":152,"column":23,"nodeType":"124","messageId":"125","endLine":152,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":26,"column":19,"nodeType":"124","messageId":"125","endLine":26,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":59,"column":11,"nodeType":"128","endLine":59,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":59,"column":11,"nodeType":"128","endLine":59,"endColumn":43},{"ruleId":"122","severity":1,"message":"123","line":26,"column":19,"nodeType":"124","messageId":"125","endLine":26,"endColumn":21},{"ruleId":"129","severity":1,"message":"130","line":1,"column":9,"nodeType":"131","messageId":"132","endLine":1,"endColumn":17},{"ruleId":"129","severity":1,"message":"133","line":1,"column":19,"nodeType":"131","messageId":"132","endLine":1,"endColumn":27},{"ruleId":"129","severity":1,"message":"134","line":1,"column":29,"nodeType":"131","messageId":"132","endLine":1,"endColumn":47},{"ruleId":"129","severity":1,"message":"135","line":1,"column":49,"nodeType":"131","messageId":"132","endLine":1,"endColumn":68},{"ruleId":"129","severity":1,"message":"136","line":2,"column":9,"nodeType":"131","messageId":"132","endLine":2,"endColumn":17},{"ruleId":"129","severity":1,"message":"137","line":2,"column":19,"nodeType":"131","messageId":"132","endLine":2,"endColumn":28},{"ruleId":"129","severity":1,"message":"138","line":2,"column":30,"nodeType":"131","messageId":"132","endLine":2,"endColumn":46},{"ruleId":"122","severity":1,"message":"139","line":15,"column":20,"nodeType":"124","messageId":"125","endLine":15,"endColumn":22},{"ruleId":"122","severity":1,"message":"139","line":15,"column":40,"nodeType":"124","messageId":"125","endLine":15,"endColumn":42},{"ruleId":"140","severity":1,"message":"141","line":16,"column":21,"nodeType":"142","messageId":"143","endLine":16,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":3,"column":31,"nodeType":"124","messageId":"125","endLine":3,"endColumn":33},{"ruleId":"122","severity":1,"message":"123","line":8,"column":38,"nodeType":"124","messageId":"125","endLine":8,"endColumn":40},{"ruleId":"122","severity":1,"message":"123","line":12,"column":38,"nodeType":"124","messageId":"125","endLine":12,"endColumn":40},{"ruleId":"129","severity":1,"message":"144","line":10,"column":7,"nodeType":"131","messageId":"132","endLine":10,"endColumn":18},{"ruleId":"122","severity":1,"message":"139","line":19,"column":18,"nodeType":"124","messageId":"125","endLine":19,"endColumn":20},{"ruleId":"122","severity":1,"message":"139","line":19,"column":38,"nodeType":"124","messageId":"125","endLine":19,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":20,"column":19,"nodeType":"142","messageId":"143","endLine":20,"endColumn":20},{"ruleId":"129","severity":1,"message":"145","line":14,"column":3,"nodeType":"131","messageId":"132","endLine":14,"endColumn":6},{"ruleId":"129","severity":1,"message":"146","line":15,"column":3,"nodeType":"131","messageId":"132","endLine":15,"endColumn":8},{"ruleId":"129","severity":1,"message":"147","line":21,"column":5,"nodeType":"131","messageId":"132","endLine":21,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":83,"column":52,"nodeType":"124","messageId":"125","endLine":83,"endColumn":54},{"ruleId":"122","severity":1,"message":"123","line":88,"column":35,"nodeType":"124","messageId":"125","endLine":88,"endColumn":37},{"ruleId":"122","severity":1,"message":"123","line":127,"column":15,"nodeType":"124","messageId":"125","endLine":127,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":187,"column":23,"nodeType":"124","messageId":"125","endLine":187,"endColumn":25},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'BlockTag' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'TransactionRequest' is defined but never used.","'TransactionResponse' is defined but never used.","'Arrayish' is defined but never used.","'BigNumber' is defined but never used.","'ProgressCallback' is defined but never used.","Expected '!==' and instead saw '!='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'PATH_PREFIX' is assigned a value but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'fileSaver' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]